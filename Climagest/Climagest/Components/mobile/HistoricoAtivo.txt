import React from 'react';
import { Badge } from "@/components/ui/badge";
import { Clock, Wrench, DollarSign, Image as ImageIcon } from "lucide-react";
import { format } from "date-fns";
import { ptBR } from "date-fns/locale";

export default function HistoricoAtivo({ ativo, ordensServico }) {
  const osConcluidas = ordensServico
    .filter(os => os.status === 'concluida')
    .sort((a, b) => new Date(b.data_conclusao) - new Date(a.data_conclusao));

  const getStatusColor = (status) => {
    switch (status) {
      case 'concluida': return 'bg-green-100 text-green-800';
      case 'em_andamento': return 'bg-blue-100 text-blue-800';
      case 'pendente': return 'bg-orange-100 text-orange-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-4">
      <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <h3 className="font-semibold text-blue-900 mb-2">{ativo.nome}</h3>
        <div className="grid grid-cols-2 gap-2 text-sm">
          <div>
            <p className="text-blue-600">Código</p>
            <p className="font-medium">{ativo.codigo}</p>
          </div>
          <div>
            <p className="text-blue-600">Localização</p>
            <p className="font-medium">{ativo.localizacao_primaria}</p>
          </div>
        </div>
      </div>

      {osConcluidas.length === 0 ? (
        <div className="text-center py-8 text-slate-500">
          <Wrench className="w-12 h-12 mx-auto mb-2 text-slate-400" />
          <p>Nenhum histórico de manutenção</p>
        </div>
      ) : (
        <div className="space-y-4">
          <h3 className="font-semibold text-slate-900">
            Linha do Tempo - {osConcluidas.length} manutenções
          </h3>
          
          {osConcluidas.map((os, index) => (
            <div key={os.id} className="relative pl-8 pb-6">
              {/* Linha do tempo */}
              {index !== osConcluidas.length - 1 && (
                <div className="absolute left-3 top-8 bottom-0 w-0.5 bg-slate-200"></div>
              )}
              
              {/* Bolinha */}
              <div className={`absolute left-0 top-0 w-6 h-6 rounded-full ${
                os.tipo_os === 'preventiva' ? 'bg-blue-500' : 'bg-orange-500'
              } flex items-center justify-center`}>
                <div className="w-2 h-2 bg-white rounded-full"></div>
              </div>

              {/* Conteúdo */}
              <div className="bg-white border border-slate-200 rounded-lg p-4 shadow-sm">
                <div className="flex justify-between items-start mb-2">
                  <div>
                    <p className="font-semibold text-slate-900">{os.numero_os}</p>
                    <p className="text-sm text-slate-600">
                      {format(new Date(os.data_conclusao), "dd 'de' MMMM 'de' yyyy", { locale: ptBR })}
                    </p>
                  </div>
                  <Badge className={getStatusColor(os.status)}>
                    {os.tipo_os === 'preventiva' ? 'Preventiva' : 'Corretiva'}
                  </Badge>
                </div>

                {os.descricao_servico_realizado && (
                  <p className="text-sm text-slate-700 mb-3">{os.descricao_servico_realizado}</p>
                )}

                <div className="grid grid-cols-2 gap-3 text-sm">
                  {os.horas_gastas && (
                    <div className="flex items-center gap-2 text-slate-600">
                      <Clock className="w-4 h-4" />
                      <span>{os.horas_gastas}h gastas</span>
                    </div>
                  )}
                  {os.custo_total > 0 && (
                    <div className="flex items-center gap-2 text-slate-600">
                      <DollarSign className="w-4 h-4" />
                      <span>R$ {os.custo_total.toFixed(2)}</span>
                    </div>
                  )}
                </div>

                {/* Fotos */}
                {(os.fotos_antes?.length > 0 || os.fotos_depois?.length > 0) && (
                  <div className="mt-3 pt-3 border-t border-slate-200">
                    <p className="text-xs text-slate-500 mb-2 flex items-center gap-1">
                      <ImageIcon className="w-3 h-3" />
                      Evidências fotográficas
                    </p>
                    <div className="flex gap-2 overflow-x-auto">
                      {os.fotos_antes?.slice(0, 3).map((url, idx) => (
                        <img
                          key={`antes-${idx}`}
                          src={url}
                          alt={`Antes ${idx}`}
                          className="w-16 h-16 object-cover rounded border border-slate-200"
                        />
                      ))}
                      {os.fotos_depois?.slice(0, 3).map((url, idx) => (
                        <img
                          key={`depois-${idx}`}
                          src={url}
                          alt={`Depois ${idx}`}
                          className="w-16 h-16 object-cover rounded border border-green-300"
                        />
                      ))}
                    </div>
                  </div>
                )}

                {os.tecnico_responsavel && (
                  <p className="text-xs text-slate-500 mt-2">
                    Técnico: {os.tecnico_responsavel}
                  </p>
                )}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}