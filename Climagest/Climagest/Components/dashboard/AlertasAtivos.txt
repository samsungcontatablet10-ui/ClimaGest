
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { AlertTriangle, AlertCircle, Clock, CheckCircle } from "lucide-react";
import { differenceInDays, parseISO } from "date-fns";

export default function AlertasAtivos({ ordensServico, ativos }) {
  const osAtrasadas = ordensServico.filter(os => {
    if (os.status === 'concluida' || !os.data_prevista) return false;
    return differenceInDays(new Date(), parseISO(os.data_prevista)) > 0;
  });

  const osProximas = ordensServico.filter(os => {
    if (os.status === 'concluida' || !os.data_prevista) return false;
    const days = differenceInDays(parseISO(os.data_prevista), new Date());
    return days >= 0 && days <= 7;
  });

  const ativosQuebrados = ativos.filter(a => a.status_operacional === 'quebrado');

  return (
    <Card className="shadow-lg border-none">
      <CardHeader className="border-b border-slate-200 bg-gradient-to-r from-orange-50 to-red-50">
        <CardTitle className="flex items-center gap-2 text-xl font-bold text-slate-900">
          <AlertTriangle className="w-5 h-5 text-orange-600" />
          Alertas e Pendências
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6 space-y-4">
        {osAtrasadas.length > 0 && (
          <div className="p-4 bg-red-50 border border-red-200 rounded-xl">
            <div className="flex items-center gap-2 mb-3">
              <AlertCircle className="w-5 h-5 text-red-600" />
              <h3 className="font-semibold text-red-900">Manutenções Atrasadas</h3>
              <Badge variant="destructive" className="ml-auto">{osAtrasadas.length}</Badge>
            </div>
            <div className="space-y-2">
              {osAtrasadas.slice(0, 3).map(os => (
                <div key={os.id} className="flex items-center justify-between text-sm">
                  <span className="font-medium text-slate-700">{os.ativo_codigo}</span>
                  <span className="text-red-600">
                    {Math.abs(differenceInDays(new Date(), parseISO(os.data_prevista)))} dias
                  </span>
                </div>
              ))}
            </div>
          </div>
        )}

        {osProximas.length > 0 && (
          <div className="p-4 bg-orange-50 border border-orange-200 rounded-xl">
            <div className="flex items-center gap-2 mb-3">
              <Clock className="w-5 h-5 text-orange-600" />
              <h3 className="font-semibold text-orange-900">Próximas 7 Dias</h3>
              <Badge className="ml-auto bg-orange-600">{osProximas.length}</Badge>
            </div>
            <div className="space-y-2">
              {osProximas.slice(0, 3).map(os => (
                <div key={os.id} className="flex items-center justify-between text-sm">
                  <span className="font-medium text-slate-700">{os.ativo_codigo}</span>
                  <span className="text-orange-600">
                    {differenceInDays(parseISO(os.data_prevista), new Date())} dias
                  </span>
                </div>
              ))}
            </div>
          </div>
        )}

        {ativosQuebrados.length > 0 && (
          <div className="p-4 bg-red-50 border border-red-200 rounded-xl">
            <div className="flex items-center gap-2 mb-3">
              <AlertTriangle className="w-5 h-5 text-red-600" />
              <h3 className="font-semibold text-red-900">Ativos Quebrados</h3>
              <Badge variant="destructive" className="ml-auto">{ativosQuebrados.length}</Badge>
            </div>
            <div className="space-y-2">
              {ativosQuebrados.slice(0, 3).map(ativo => (
                <div key={ativo.id} className="flex items-center justify-between text-sm">
                  <span className="font-medium text-slate-700">{ativo.codigo}</span>
                  <span className="text-red-600">{ativo.nome}</span>
                </div>
              ))}
            </div>
          </div>
        )}

        {osAtrasadas.length === 0 && osProximas.length === 0 && ativosQuebrados.length === 0 && (
          <div className="text-center py-8 text-slate-500">
            <CheckCircle className="w-12 h-12 mx-auto mb-3 text-green-500" />
            <p className="font-medium">Nenhum alerta no momento</p>
            <p className="text-sm">Tudo funcionando perfeitamente!</p>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
