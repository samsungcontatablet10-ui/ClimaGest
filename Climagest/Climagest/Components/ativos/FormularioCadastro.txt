import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Save, X } from "lucide-react";
import { format } from "date-fns";

export default function FormularioCadastro({ ativo, onSave, onCancel, isProcessing }) {
  const [formData, setFormData] = useState(ativo || {
    codigo: '',
    tipo_ativo: 'ar_condicionado',
    nome: '',
    fabricante: '',
    modelo: '',
    numero_serie: '',
    capacidade: '',
    unidade_capacidade: 'BTU',
    tipo_gas_refrigerante: '',
    localizacao_primaria: '',
    sub_localizacao: '',
    ponto_wifi: '',
    data_aquisicao: format(new Date(), 'yyyy-MM-dd'),
    valor_compra: '',
    vida_util_anos: 10,
    frequencia_preventiva: 'trimestral',
    status_operacional: 'operacional',
    observacoes: ''
  });

  const handleChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    const proximaManutencao = new Date(formData.data_aquisicao);
    switch (formData.frequencia_preventiva) {
      case 'mensal': proximaManutencao.setMonth(proximaManutencao.getMonth() + 1); break;
      case 'trimestral': proximaManutencao.setMonth(proximaManutencao.getMonth() + 3); break;
      case 'semestral': proximaManutencao.setMonth(proximaManutencao.getMonth() + 6); break;
      case 'anual': proximaManutencao.setFullYear(proximaManutencao.getFullYear() + 1); break;
    }

    onSave({
      ...formData,
      capacidade: parseFloat(formData.capacidade) || 0,
      valor_compra: parseFloat(formData.valor_compra) || 0,
      vida_util_anos: parseInt(formData.vida_util_anos) || 10,
      proxima_manutencao: format(proximaManutencao, 'yyyy-MM-dd')
    });
  };

  return (
    <Card className="shadow-lg border-none">
      <CardHeader className="border-b border-slate-200 bg-gradient-to-r from-blue-50 to-slate-50">
        <CardTitle className="text-xl font-bold text-slate-900">
          {ativo ? 'Editar Ativo' : 'Cadastrar Novo Ativo'}
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-2">
              <Label htmlFor="codigo">Código do Ativo *</Label>
              <Input
                id="codigo"
                value={formData.codigo}
                onChange={(e) => handleChange('codigo', e.target.value)}
                placeholder="Ex: AC-001"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="tipo_ativo">Tipo de Ativo *</Label>
              <Select value={formData.tipo_ativo} onValueChange={(v) => handleChange('tipo_ativo', v)}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="ar_condicionado">Ar-Condicionado</SelectItem>
                  <SelectItem value="mecalor">Máquina de Mecalor</SelectItem>
                  <SelectItem value="ar_maquina">Ar de Máquina</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2 md:col-span-2">
              <Label htmlFor="nome">Nome/Descrição *</Label>
              <Input
                id="nome"
                value={formData.nome}
                onChange={(e) => handleChange('nome', e.target.value)}
                placeholder="Descrição do equipamento"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="fabricante">Fabricante</Label>
              <Input
                id="fabricante"
                value={formData.fabricante}
                onChange={(e) => handleChange('fabricante', e.target.value)}
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="modelo">Modelo</Label>
              <Input
                id="modelo"
                value={formData.modelo}
                onChange={(e) => handleChange('modelo', e.target.value)}
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="numero_serie">Número de Série</Label>
              <Input
                id="numero_serie"
                value={formData.numero_serie}
                onChange={(e) => handleChange('numero_serie', e.target.value)}
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="capacidade">Capacidade</Label>
              <div className="flex gap-2">
                <Input
                  id="capacidade"
                  type="number"
                  value={formData.capacidade}
                  onChange={(e) => handleChange('capacidade', e.target.value)}
                  className="flex-1"
                />
                <Select value={formData.unidade_capacidade} onValueChange={(v) => handleChange('unidade_capacidade', v)}>
                  <SelectTrigger className="w-32">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="BTU">BTU</SelectItem>
                    <SelectItem value="Toneladas">Toneladas</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="space-y-2 md:col-span-2">
              <Label htmlFor="tipo_gas_refrigerante">Tipo de Gás Refrigerante</Label>
              <Input
                id="tipo_gas_refrigerante"
                value={formData.tipo_gas_refrigerante}
                onChange={(e) => handleChange('tipo_gas_refrigerante', e.target.value)}
                placeholder="Ex: R-410A, R-22"
              />
            </div>
          </div>

          <div className="border-t border-slate-200 pt-6">
            <h3 className="text-lg font-semibold text-slate-900 mb-4">Localização Indoor</h3>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="localizacao_primaria">Localização Primária *</Label>
                <Input
                  id="localizacao_primaria"
                  value={formData.localizacao_primaria}
                  onChange={(e) => handleChange('localizacao_primaria', e.target.value)}
                  placeholder="Ex: Galpão A, Edifício B"
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="sub_localizacao">Sub-localização</Label>
                <Input
                  id="sub_localizacao"
                  value={formData.sub_localizacao}
                  onChange={(e) => handleChange('sub_localizacao', e.target.value)}
                  placeholder="Ex: Sala CPD, Linha 4"
                />
              </div>

              <div className="space-y-2 md:col-span-2">
                <Label htmlFor="ponto_wifi">Ponto Wi-Fi / Beacon</Label>
                <Input
                  id="ponto_wifi"
                  value={formData.ponto_wifi}
                  onChange={(e) => handleChange('ponto_wifi', e.target.value)}
                  placeholder="SSID ou ID do beacon próximo"
                />
              </div>
            </div>
          </div>

          <div className="border-t border-slate-200 pt-6">
            <h3 className="text-lg font-semibold text-slate-900 mb-4">Informações Financeiras</h3>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <Label htmlFor="data_aquisicao">Data de Aquisição</Label>
                <Input
                  id="data_aquisicao"
                  type="date"
                  value={formData.data_aquisicao}
                  onChange={(e) => handleChange('data_aquisicao', e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="valor_compra">Valor de Compra (R$)</Label>
                <Input
                  id="valor_compra"
                  type="number"
                  step="0.01"
                  value={formData.valor_compra}
                  onChange={(e) => handleChange('valor_compra', e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="vida_util_anos">Vida Útil (anos)</Label>
                <Input
                  id="vida_util_anos"
                  type="number"
                  value={formData.vida_util_anos}
                  onChange={(e) => handleChange('vida_util_anos', e.target.value)}
                />
              </div>
            </div>
          </div>

          <div className="border-t border-slate-200 pt-6">
            <h3 className="text-lg font-semibold text-slate-900 mb-4">Manutenção</h3>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="frequencia_preventiva">Frequência Preventiva</Label>
                <Select value={formData.frequencia_preventiva} onValueChange={(v) => handleChange('frequencia_preventiva', v)}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="mensal">Mensal</SelectItem>
                    <SelectItem value="trimestral">Trimestral</SelectItem>
                    <SelectItem value="semestral">Semestral</SelectItem>
                    <SelectItem value="anual">Anual</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="status_operacional">Status Operacional</Label>
                <Select value={formData.status_operacional} onValueChange={(v) => handleChange('status_operacional', v)}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="operacional">Operacional</SelectItem>
                    <SelectItem value="manutencao">Em Manutenção</SelectItem>
                    <SelectItem value="quebrado">Quebrado</SelectItem>
                    <SelectItem value="inativo">Inativo</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2 md:col-span-2">
                <Label htmlFor="observacoes">Observações</Label>
                <Textarea
                  id="observacoes"
                  value={formData.observacoes}
                  onChange={(e) => handleChange('observacoes', e.target.value)}
                  rows={3}
                />
              </div>
            </div>
          </div>

          <div className="flex justify-end gap-3 pt-6">
            <Button type="button" variant="outline" onClick={onCancel} disabled={isProcessing}>
              <X className="w-4 h-4 mr-2" />
              Cancelar
            </Button>
            <Button type="submit" disabled={isProcessing} className="bg-blue-600 hover:bg-blue-700">
              <Save className="w-4 h-4 mr-2" />
              {ativo ? 'Atualizar' : 'Cadastrar'}
            </Button>
          </div>
        </form>
      </CardContent>
    </Card>
  );
}